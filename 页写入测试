#include <Wire.h>

// 24C02的I2C地址
#define EEPROM_ADDRESS 0x50

// 自定义SDA和SCL引脚，只能D+数字，不能只填写引脚数字
#define SDA_PIN D1 // GPIO3作为SDA
#define SCL_PIN D2 // GPIO1作为SCL，注意这里应该是GPIO1，而不是GPIO1的引脚编号

// 24C02页写入大小，假设为8字节
const int PAGE_SIZE = 8;

void setup() {
  Wire.begin(SDA_PIN, SCL_PIN, 100000); // 使用指定的引脚初始化I2C通信，并设置频率为100kHz，10k~100kHZ范围
  Serial.begin(9600); // 初始化串口通信

  // 写入中文数据到24C02
  Serial.println("正在写入数据到EEPROM...");
  String dataToWrite = "你好，欢迎使用24C02";
  writeEEPROM(0x00, dataToWrite.c_str());

  // 等待足够的时间以确保写入完成
  delay(100);

  // 读取数据从24C02
  Serial.println("正在从EEPROM读取数据...");
  String dataRead = readEEPROM(0x00, dataToWrite.length());

  // 验证写入和读取的数据是否一致
  if (dataRead == dataToWrite) {
    Serial.println("数据写入和读取成功，并且一致。");
  } else {
    Serial.println("数据不一致，写入或读取失败。");
  }
}

void loop() {
  // 这里不需要循环代码
}

void writeEEPROM(uint8_t address, const char* data) {
  int dataLength = strlen(data);
  int currentAddress = address;
  int remaining = dataLength;

  while (remaining > 0) {
    int writeSize = min(remaining, PAGE_SIZE - (currentAddress % PAGE_SIZE));

    Wire.beginTransmission(EEPROM_ADDRESS);
    Wire.write(currentAddress);
    for (int i = 0; i < writeSize; i++) {
      Wire.write(data[dataLength - remaining]);
      remaining--;
      currentAddress++;
    }
    byte status = Wire.endTransmission();
    if (status!= 0) {
      Serial.println("I2C写入错误");
    }
    delay(5); // 等待写入完成
  }
}

String readEEPROM(uint8_t address, uint8_t length) {
  String data = "";
  Wire.beginTransmission(EEPROM_ADDRESS);
  Wire.write(address);
  Wire.endTransmission();
  Wire.requestFrom(EEPROM_ADDRESS, length);
  if (Wire.available() == length) {
    while (Wire.available()) {
      char c = Wire.read();
      data += c;
    }
  } else {
    Serial.println("I2C读取错误：未获得足够的数据");
  }
  return data;
}
